/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsString, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { EnumTicketPriority } from "./EnumTicketPriority";
import { EnumTicketStatus } from "./EnumTicketStatus";
import { EnumTicketTicketPriority } from "./EnumTicketTicketPriority";
import { EnumTicketTicketStatus } from "./EnumTicketTicketStatus";

@ObjectType()
class Ticket {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    enum: EnumTicketPriority,
  })
  @IsEnum(EnumTicketPriority)
  @IsOptional()
  @Field(() => EnumTicketPriority, {
    nullable: true,
  })
  priority?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumTicketStatus,
  })
  @IsEnum(EnumTicketStatus)
  @IsOptional()
  @Field(() => EnumTicketStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ticketDescription!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumTicketTicketPriority,
  })
  @IsEnum(EnumTicketTicketPriority)
  @IsOptional()
  @Field(() => EnumTicketTicketPriority, {
    nullable: true,
  })
  ticketPriority?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumTicketTicketStatus,
  })
  @IsEnum(EnumTicketTicketStatus)
  @IsOptional()
  @Field(() => EnumTicketTicketStatus, {
    nullable: true,
  })
  ticketStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ticketTitle!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Ticket as Ticket };
